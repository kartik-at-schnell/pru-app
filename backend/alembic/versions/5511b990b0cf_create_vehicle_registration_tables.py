"""Create vehicle registration tables

Revision ID: 5511b990b0cf
Revises: 
Create Date: 2025-10-15 05:59:05.642033

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5511b990b0cf'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('action_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_action_types_id'), 'action_types', ['id'], unique=False)
    op.create_table('vehicle_registration_master',
    sa.Column('license_number', sa.String(length=20), nullable=False),
    sa.Column('vehicle_id_number', sa.String(length=20), nullable=True),
    sa.Column('registered_owner', sa.String(length=200), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('zip_code', sa.String(length=10), nullable=True),
    sa.Column('make', sa.String(length=50), nullable=True),
    sa.Column('model', sa.String(length=100), nullable=True),
    sa.Column('year_model', sa.Integer(), nullable=True),
    sa.Column('body_type', sa.String(length=50), nullable=True),
    sa.Column('type_license', sa.String(length=50), nullable=True),
    sa.Column('type_vehicle', sa.String(length=50), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('expiration_date', sa.Date(), nullable=True),
    sa.Column('date_issued', sa.Date(), nullable=True),
    sa.Column('date_fee_received', sa.Date(), nullable=True),
    sa.Column('amount_paid', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('use_tax', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('sticker_issued', sa.String(length=50), nullable=True),
    sa.Column('sticker_numbers', sa.String(length=100), nullable=True),
    sa.Column('approval_status', sa.String(length=20), nullable=True),
    sa.Column('active_status', sa.Boolean(), nullable=True),
    sa.Column('record_type', sa.String(length=20), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('error_text', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vehicle_registration_master_id'), 'vehicle_registration_master', ['id'], unique=False)
    op.create_index(op.f('ix_vehicle_registration_master_license_number'), 'vehicle_registration_master', ['license_number'], unique=True)
    op.create_index(op.f('ix_vehicle_registration_master_vehicle_id_number'), 'vehicle_registration_master', ['vehicle_id_number'], unique=False)
    op.create_table('record_action_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('record_table', sa.String(length=50), nullable=False),
    sa.Column('action_type_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('ip_address', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['action_type_id'], ['action_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_record_action_logs_id'), 'record_action_logs', ['id'], unique=False)
    op.create_table('vehicle_registration_contacts',
    sa.Column('master_record_id', sa.Integer(), nullable=True),
    sa.Column('contact_name', sa.String(length=200), nullable=True),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('alt_contact_1', sa.String(length=200), nullable=True),
    sa.Column('alt_contact_2', sa.String(length=200), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['master_record_id'], ['vehicle_registration_master.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vehicle_registration_contacts_id'), 'vehicle_registration_contacts', ['id'], unique=False)
    op.create_table('vehicle_registration_fictitious',
    sa.Column('master_record_id', sa.Integer(), nullable=True),
    sa.Column('license_number', sa.String(length=20), nullable=False),
    sa.Column('vehicle_id_number', sa.String(length=17), nullable=True),
    sa.Column('registered_owner', sa.String(length=200), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('zip_code', sa.String(length=10), nullable=True),
    sa.Column('make', sa.String(length=50), nullable=True),
    sa.Column('model', sa.String(length=100), nullable=True),
    sa.Column('year_model', sa.Integer(), nullable=True),
    sa.Column('vlp_class', sa.String(length=50), nullable=True),
    sa.Column('amount_due', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('amount_received', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('approval_status', sa.String(length=20), nullable=True),
    sa.Column('active_status', sa.Boolean(), nullable=True),
    sa.Column('error_text', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['master_record_id'], ['vehicle_registration_master.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vehicle_registration_fictitious_id'), 'vehicle_registration_fictitious', ['id'], unique=False)
    op.create_index(op.f('ix_vehicle_registration_fictitious_license_number'), 'vehicle_registration_fictitious', ['license_number'], unique=False)
    op.create_index(op.f('ix_vehicle_registration_fictitious_vehicle_id_number'), 'vehicle_registration_fictitious', ['vehicle_id_number'], unique=False)
    op.create_table('vehicle_registration_reciprocal_issued',
    sa.Column('master_record_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('license_plate', sa.String(length=20), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('year_of_renewal', sa.Integer(), nullable=True),
    sa.Column('cancellation_date', sa.Date(), nullable=True),
    sa.Column('sticker_number', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['master_record_id'], ['vehicle_registration_master.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vehicle_registration_reciprocal_issued_id'), 'vehicle_registration_reciprocal_issued', ['id'], unique=False)
    op.create_table('vehicle_registration_reciprocal_received',
    sa.Column('master_record_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('license_plate', sa.String(length=20), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('year_of_renewal', sa.Integer(), nullable=True),
    sa.Column('cancellation_date', sa.Date(), nullable=True),
    sa.Column('sticker_number', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['master_record_id'], ['vehicle_registration_master.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vehicle_registration_reciprocal_received_id'), 'vehicle_registration_reciprocal_received', ['id'], unique=False)
    op.create_table('vehicle_registration_undercover',
    sa.Column('master_record_id', sa.Integer(), nullable=True),
    sa.Column('license_number', sa.String(length=20), nullable=True),
    sa.Column('vehicle_id_number', sa.String(length=17), nullable=True),
    sa.Column('registered_owner', sa.String(length=200), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('zip_code', sa.String(length=10), nullable=True),
    sa.Column('make', sa.String(length=50), nullable=True),
    sa.Column('year_model', sa.Integer(), nullable=True),
    sa.Column('class_type', sa.String(length=50), nullable=True),
    sa.Column('type_license', sa.String(length=50), nullable=True),
    sa.Column('expiration_date', sa.Date(), nullable=True),
    sa.Column('date_issued', sa.Date(), nullable=True),
    sa.Column('date_fee_received', sa.Date(), nullable=True),
    sa.Column('amount_paid', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('approval_status', sa.String(length=20), nullable=True),
    sa.Column('active_status', sa.Boolean(), nullable=True),
    sa.Column('error_text', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['master_record_id'], ['vehicle_registration_master.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vehicle_registration_undercover_id'), 'vehicle_registration_undercover', ['id'], unique=False)
    op.create_index(op.f('ix_vehicle_registration_undercover_license_number'), 'vehicle_registration_undercover', ['license_number'], unique=True)
    op.create_index(op.f('ix_vehicle_registration_undercover_vehicle_id_number'), 'vehicle_registration_undercover', ['vehicle_id_number'], unique=False)
    op.create_table('vehicle_registration_fictitious_trap_info',
    sa.Column('fictitious_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('number', sa.String(length=100), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['fictitious_id'], ['vehicle_registration_fictitious.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vehicle_registration_fictitious_trap_info_id'), 'vehicle_registration_fictitious_trap_info', ['id'], unique=False)
    op.create_table('vehicle_registration_undercover_trap_info',
    sa.Column('undercover_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('number', sa.String(length=100), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['undercover_id'], ['vehicle_registration_undercover.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vehicle_registration_undercover_trap_info_id'), 'vehicle_registration_undercover_trap_info', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_vehicle_registration_undercover_trap_info_id'), table_name='vehicle_registration_undercover_trap_info')
    op.drop_table('vehicle_registration_undercover_trap_info')
    op.drop_index(op.f('ix_vehicle_registration_fictitious_trap_info_id'), table_name='vehicle_registration_fictitious_trap_info')
    op.drop_table('vehicle_registration_fictitious_trap_info')
    op.drop_index(op.f('ix_vehicle_registration_undercover_vehicle_id_number'), table_name='vehicle_registration_undercover')
    op.drop_index(op.f('ix_vehicle_registration_undercover_license_number'), table_name='vehicle_registration_undercover')
    op.drop_index(op.f('ix_vehicle_registration_undercover_id'), table_name='vehicle_registration_undercover')
    op.drop_table('vehicle_registration_undercover')
    op.drop_index(op.f('ix_vehicle_registration_reciprocal_received_id'), table_name='vehicle_registration_reciprocal_received')
    op.drop_table('vehicle_registration_reciprocal_received')
    op.drop_index(op.f('ix_vehicle_registration_reciprocal_issued_id'), table_name='vehicle_registration_reciprocal_issued')
    op.drop_table('vehicle_registration_reciprocal_issued')
    op.drop_index(op.f('ix_vehicle_registration_fictitious_vehicle_id_number'), table_name='vehicle_registration_fictitious')
    op.drop_index(op.f('ix_vehicle_registration_fictitious_license_number'), table_name='vehicle_registration_fictitious')
    op.drop_index(op.f('ix_vehicle_registration_fictitious_id'), table_name='vehicle_registration_fictitious')
    op.drop_table('vehicle_registration_fictitious')
    op.drop_index(op.f('ix_vehicle_registration_contacts_id'), table_name='vehicle_registration_contacts')
    op.drop_table('vehicle_registration_contacts')
    op.drop_index(op.f('ix_record_action_logs_id'), table_name='record_action_logs')
    op.drop_table('record_action_logs')
    op.drop_index(op.f('ix_vehicle_registration_master_vehicle_id_number'), table_name='vehicle_registration_master')
    op.drop_index(op.f('ix_vehicle_registration_master_license_number'), table_name='vehicle_registration_master')
    op.drop_index(op.f('ix_vehicle_registration_master_id'), table_name='vehicle_registration_master')
    op.drop_table('vehicle_registration_master')
    op.drop_index(op.f('ix_action_types_id'), table_name='action_types')
    op.drop_table('action_types')
    # ### end Alembic commands ###
